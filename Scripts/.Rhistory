path <- paste(path,File_to_Read[j,"Term"],sep=";")
}else{
path="NA"
}
}
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
View(RES)
print(i)
gene <- Genes[i,1]
Genes <- read.delim("/Projects/Sanjay_Gupta/Genes.txt",sep="\t",header = F,stringsAsFactors = F,check.names = F)
colnames(Genes) <- "Gene"
File_to_Read <- read.delim("/Projects/Sanjay_Gupta/1.5FC_GO_Enrich_BP.txt",sep = "\t",header = T,stringsAsFactors = F,check.names = F)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(gene,File_to_Read[j,'Genes'])
if(path_TEST){
path <- paste(path,File_to_Read[j,"Term"],sep=";")
}else{
path="NA"
}
}
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
View(RES)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(gene,File_to_Read[j,'Genes'])
if(path_TEST){
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}else{
res <- cbind(gene,"NA")
}
}
RES <- rbind(RES,res)
}
View(RES)
gene = "RPL17"
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(gene,File_to_Read[j,'Genes'])
if(path_TEST){
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}else{
res <- cbind(gene,"NA")
}
}
res <- NULL
path <- NULL
J = 1
j = 1
path_TEST <-grepl(gene,File_to_Read[j,'Genes'])
if(path_TEST){
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}else{
res <- cbind(gene,"NA")
}
j = 2
path_TEST <-grepl(gene,File_to_Read[j,'Genes'])
if(path_TEST){
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}else{
res <- cbind(gene,"NA")
}
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}else{
res <- cbind(gene,"NA")
}
}
RES <- rbind(RES,res)
}
View(RES)
class(gene)
class(File_to_Read[j,'Genes'])
View(File_to_Read[j,"Term"])
class(File_to_Read[j,"Term"])
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}else{
res <- cbind(gene,"NA")
}
}
RES <- rbind(RES,res)
}
View(RES)
View(RES)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
}
}
View(RES)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(j==1){
path <- paste(path,File_to_Read[j,"Term"],sep="")
res <- cbind(gene,path)
RES <- rbind(RES,res)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
}
}
}
View(RES)
RES[104,2]
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(j==1){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
RES <- rbind(RES,res)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
}
}
}
View(RES)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
first = T
if(first){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
RES <- rbind(RES,res)
first = F
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
}
}
}
View(RES)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(path==NULL){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
RES <- rbind(RES,res)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
}
}
}
path==NULL
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(is.null(path)){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
RES <- rbind(RES,res)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
RES <- rbind(RES,res)
}
}
}
}
View(RES)
RES[104,2]
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(is.null(path)){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}
}
RES <- rbind(RES,res)
}
}
View(RES)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(is.null(path)){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}
}
}
RES <- rbind(RES,res)
}
View(RES)
View(Genes)
colnames(RES) <- c("Gene","Terms")
RES <- plyr:::join(Genes,RES,type="full",match="all")
RES <- plyr:::join(Genes,as.data.frame(RES),type="full",match="all")
View(RES)
write.table("/Projects/Sanjay_Gupta/1.5FC_GO_Enrich_BP_RESULTS.txt",row.names = F,col.names = T,sep="\t")
write.table(RES,"/Projects/Sanjay_Gupta/1.5FC_GO_Enrich_BP_RESULTS.txt",row.names = F,col.names = T,sep="\t")
Genes <- read.delim("/Projects/Sanjay_Gupta/Genes.txt",sep="\t",header = F,stringsAsFactors = F,check.names = F)
colnames(Genes) <- "Gene"
File_to_Read <- read.delim("/Projects/Sanjay_Gupta/1.5FC_GR_Enrich_MF.txt",sep = "\t",header = T,stringsAsFactors = F,check.names = F)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(is.null(path)){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}
}
}
RES <- rbind(RES,res)
}
colnames(RES) <- c("Gene","Terms")
RES <- plyr:::join(Genes,as.data.frame(RES),type="full",match="all")
View(RES)
write.table(RES,"/Projects/Sanjay_Gupta/1.5FC_GR_Enrich_MF_RESULTS.txt",row.names = F,col.names = T,sep="\t")
Genes <- read.delim("/Projects/Sanjay_Gupta/Genes.txt",sep="\t",header = F,stringsAsFactors = F,check.names = F)
colnames(Genes) <- "Gene"
File_to_Read <- read.delim("/Projects/Sanjay_Gupta/1.5FC_GR_Enrich_MF.txt",sep = "\t",header = T,stringsAsFactors = F,check.names = F)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(is.null(path)){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}
}
}
RES <- rbind(RES,res)
}
colnames(RES) <- c("Gene","Terms")
RES <- plyr:::join(Genes,as.data.frame(RES),type="full",match="all")
write.table(RES,"/Projects/Sanjay_Gupta/1.5FC_GR_Enrich_MF_RESULTS.txt",row.names = F,col.names = T,sep="\t")
Genes <- read.delim("/Projects/Sanjay_Gupta/Genes.txt",sep="\t",header = F,stringsAsFactors = F,check.names = F)
colnames(Genes) <- "Gene"
File_to_Read <- read.delim("/Projects/Sanjay_Gupta/1.5FC_GO_Enrich_BP.txt",sep = "\t",header = T,stringsAsFactors = F,check.names = F)
RES <- NULL
for(i in 1:length(Genes[,1])){
print(i)
gene <- Genes[i,1]
res <- NULL
path <- NULL
for(j in 1:length(File_to_Read[,1])){
path_TEST <-grepl(as.character(gene),as.character(File_to_Read[j,'Genes']))
if(path_TEST){
print("True")
if(is.null(path)){
path <- File_to_Read[j,"Term"]
res <- cbind(gene,path)
}else{
path <- paste(path,File_to_Read[j,"Term"],sep=";")
res <- cbind(gene,path)
}
}
}
RES <- rbind(RES,res)
}
colnames(RES) <- c("Gene","Terms")
RES <- plyr:::join(Genes,as.data.frame(RES),type="full",match="all")
write.table(RES,"/Projects/Sanjay_Gupta/1.5FC_GO_Enrich_BP_RESULTS.txt",row.names = F,col.names = T,sep="\t")
rm(list=ls())
require(stringr)
require(gplots)
require(marray)
require(ConsensusClusterPlus)
require(plyr)
require(multtest)
epsilon = 1e-05
NCI_PID_Pathways = read.delim("/Projects/Finished/EAC_GRADY/Methylation_Data/DMP_PATHWAY_ENRICHMENT/FinalCurated_NCI_PID_PAthway_GeneNames_2.txt", sep="\t", header=T)
NCI_PID_Pathways = as.matrix(NCI_PID_Pathways)
NCI_PID_Pathways_uniq = unique(NCI_PID_Pathways[,3])
all_targets = read.delim("/Projects/Finished/EAC_GRADY/Methylation_Data/DMP_PATHWAY_ENRICHMENT/AllTargets_Genes_MethylArray.txt", sep="\t", header=T)
all_targets = as.matrix(all_targets)
all_targets_genes = as.matrix(all_targets[,2])
all_targets_genes_uniq = unique(apply(all_targets_genes, 1, function(x) unlist(strsplit(x, split=";"))[1]))
Num_Genes_On_Platform = length(all_targets_genes_uniq)
Num_genes_NCI_PID = length(unique(NCI_PID_Pathways[,1])) #2688
genes <- read.delim("/Projects/Finished/Ahmed_Khalil/21STsEPT/Gene_Bodies.txt",sep="\t",header=F)
View(genes)
eac_sigdiff_genes_uniq <- as.character(as.matrix(genes))
Num_DiffExpr_genes = length(eac_sigdiff_genes_uniq)
NCI_PID_Pathways_uniq_pval = NULL
for (i in 1:length(NCI_PID_Pathways_uniq)) {
#find number of genes in pathway
nci_pid_path_ind = which(NCI_PID_Pathways[,3] == NCI_PID_Pathways_uniq[i])
nci_path_names = c(NCI_PID_Pathways[nci_pid_path_ind[1],2], NCI_PID_Pathways[nci_pid_path_ind[1],3], NCI_PID_Pathways[nci_pid_path_ind[1],4])
pathprots = NCI_PID_Pathways[nci_pid_path_ind,1]
num_pathprots = length(pathprots)
num_genes_cohort = Num_DiffExpr_genes
#find number of pathway genes present in cohort
#loop over pathway proteins here and check if any of the aliases are present in cohort
num_pathprots_in_cohort = 0
path_genes_in_cohort = NULL
tmp=NULL
for (j in 1:num_pathprots) {
protj_symbs = NCI_PID_Pathways[which(NCI_PID_Pathways[,3] == NCI_PID_Pathways_uniq[i] & NCI_PID_Pathways[,1] == pathprots[j]),6]
protj_symbs = as.vector(unlist(strsplit(protj_symbs, ",")))
pres_inds = which(!is.na(match(protj_symbs, eac_sigdiff_genes_uniq)))
is_pres = length(pres_inds)
if (is_pres !=0) {
num_pathprots_in_cohort = num_pathprots_in_cohort+1
path_genes_in_cohort = c(path_genes_in_cohort, eac_sigdiff_genes_uniq[match(protj_symbs[pres_inds], eac_sigdiff_genes_uniq)])
}
}
pvali = phyper(num_pathprots_in_cohort, num_genes_cohort, Num_Genes_On_Platform-num_genes_cohort, num_pathprots, lower.tail = F)
tmp=rbind(path_genes_in_cohort)
tmp_txt = paste(tmp, collapse=",")
outj = c(nci_path_names, num_pathprots, num_pathprots_in_cohort, 100*num_pathprots_in_cohort/num_pathprots, pvali, tmp_txt)
NCI_PID_Pathways_uniq_pval = rbind(NCI_PID_Pathways_uniq_pval, outj)
}
colnames(NCI_PID_Pathways_uniq_pval) = c("NCIPIDPathwayLongName", "NCIPIDPathwayShortName", "NCIPIDPathID", "NumGenesInPathway",
"NumGenesDiffExpressed", "PercentGenesDiffExpressed", "HyperGeom_PVal", "DiffMethylatedGenesInPathway")
temp1<-mt.rawp2adjp(as.numeric(NCI_PID_Pathways_uniq_pval[,7]),proc=c("BH", "BY"))
temp1.bh = temp1$adjp[order(temp1$index),]
NCI_PID_Pathways_uniq_pval = cbind(NCI_PID_Pathways_uniq_pval[,1:7], temp1.bh[,2:3], NCI_PID_Pathways_uniq_pval[,8])
colnames(NCI_PID_Pathways_uniq_pval)[10] <- "Genes"
View(NCI_PID_Pathways)
View(NCI_PID_Pathways_uniq_pval)
write.table(NCI_PID_Pathways_uniq_pval,"/Projects/Finished/Ahmed_Khalil/21STsEPT/Gene_Bodies_NCI_PID_Pathways_NCIPID.txt", row.names=F, col.names=T, quote=F, sep="\t", eol = "\n")
rm(list=ls())
require(stringr)
require(gplots)
require(marray)
require(ConsensusClusterPlus)
require(plyr)
require(multtest)
epsilon = 1e-05
# load("/Projects/Methylation_Data/DMP_PATHWAY_ENRICHMENT/Annotated.DMPlist.rda")
# load("/Projects/Methylation_Data/DMP_PATHWAY_ENRICHMENT/UniverseID.rda")
######### NCI PID PATHWAY ENRICHMENT #########
NCI_PID_Pathways = read.delim("/Projects/Finished/EAC_GRADY/Methylation_Data/DMP_PATHWAY_ENRICHMENT/FinalCurated_NCI_PID_PAthway_GeneNames_2.txt", sep="\t", header=T)
NCI_PID_Pathways = as.matrix(NCI_PID_Pathways)
NCI_PID_Pathways_uniq = unique(NCI_PID_Pathways[,3])
all_targets = read.delim("/Projects/Finished/EAC_GRADY/Methylation_Data/DMP_PATHWAY_ENRICHMENT/AllTargets_Genes_MethylArray.txt", sep="\t", header=T)
all_targets = as.matrix(all_targets)
all_targets_genes = as.matrix(all_targets[,2])
all_targets_genes_uniq = unique(apply(all_targets_genes, 1, function(x) unlist(strsplit(x, split=";"))[1]))
Num_Genes_On_Platform = length(all_targets_genes_uniq)
#Num_Genes_On_Platform = 30187
Num_genes_NCI_PID = length(unique(NCI_PID_Pathways[,1])) #2688
#name_df <- names(Annotated.DMPlist)
genes <- read.delim("/Projects/Finished/Ahmed_Khalil/21STsEPT/Promoters.txt",sep="\t",header=F)
eac_sigdiff_genes_uniq <- as.character(as.matrix(genes))
Num_DiffExpr_genes = length(eac_sigdiff_genes_uniq)
NCI_PID_Pathways_uniq_pval = NULL
for (i in 1:length(NCI_PID_Pathways_uniq)) {
#find number of genes in pathway
nci_pid_path_ind = which(NCI_PID_Pathways[,3] == NCI_PID_Pathways_uniq[i])
nci_path_names = c(NCI_PID_Pathways[nci_pid_path_ind[1],2], NCI_PID_Pathways[nci_pid_path_ind[1],3], NCI_PID_Pathways[nci_pid_path_ind[1],4])
pathprots = NCI_PID_Pathways[nci_pid_path_ind,1]
num_pathprots = length(pathprots)
num_genes_cohort = Num_DiffExpr_genes
#find number of pathway genes present in cohort
#loop over pathway proteins here and check if any of the aliases are present in cohort
num_pathprots_in_cohort = 0
path_genes_in_cohort = NULL
tmp=NULL
for (j in 1:num_pathprots) {
protj_symbs = NCI_PID_Pathways[which(NCI_PID_Pathways[,3] == NCI_PID_Pathways_uniq[i] & NCI_PID_Pathways[,1] == pathprots[j]),6]
protj_symbs = as.vector(unlist(strsplit(protj_symbs, ",")))
pres_inds = which(!is.na(match(protj_symbs, eac_sigdiff_genes_uniq)))
is_pres = length(pres_inds)
if (is_pres !=0) {
num_pathprots_in_cohort = num_pathprots_in_cohort+1
path_genes_in_cohort = c(path_genes_in_cohort, eac_sigdiff_genes_uniq[match(protj_symbs[pres_inds], eac_sigdiff_genes_uniq)])
}
}
pvali = phyper(num_pathprots_in_cohort, num_genes_cohort, Num_Genes_On_Platform-num_genes_cohort, num_pathprots, lower.tail = F)
tmp=rbind(path_genes_in_cohort)
tmp_txt = paste(tmp, collapse=",")
outj = c(nci_path_names, num_pathprots, num_pathprots_in_cohort, 100*num_pathprots_in_cohort/num_pathprots, pvali, tmp_txt)
NCI_PID_Pathways_uniq_pval = rbind(NCI_PID_Pathways_uniq_pval, outj)
}
colnames(NCI_PID_Pathways_uniq_pval) = c("NCIPIDPathwayLongName", "NCIPIDPathwayShortName", "NCIPIDPathID", "NumGenesInPathway",
"NumGenesDiffExpressed", "PercentGenesDiffExpressed", "HyperGeom_PVal", "DiffMethylatedGenesInPathway")
temp1<-mt.rawp2adjp(as.numeric(NCI_PID_Pathways_uniq_pval[,7]),proc=c("BH", "BY"))
temp1.bh = temp1$adjp[order(temp1$index),]
NCI_PID_Pathways_uniq_pval = cbind(NCI_PID_Pathways_uniq_pval[,1:7], temp1.bh[,2:3], NCI_PID_Pathways_uniq_pval[,8])
colnames(NCI_PID_Pathways_uniq_pval)[10] <- "Genes"
write.table(NCI_PID_Pathways_uniq_pval,"/Projects/Finished/Ahmed_Khalil/21STsEPT/Promoters_NCI_PID_Pathways_NCIPID.txt", row.names=F, col.names=T, quote=F, sep="\t", eol = "\n")
